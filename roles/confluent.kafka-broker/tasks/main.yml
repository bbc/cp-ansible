### BBC additions - use supplied certificate for ssl mode.
- name: Install bbc-eng-bsd-ssl
  apt:
    update_cache: yes
    cache_valid_time: 300
    state: latest
    name: bbc-eng-bsd-ssl

- name: Copy certificate to server
  copy:
    content: "{{kafka_cert_pem}}"
    dest: "/etc/ssl/certs/kafka.pem"
    owner: root
    group: root
    mode: 0644
  when: security_mode == "ssl"

- name: Copy key to server
  copy:
    content: "{{kafka_cert_key}}"
    dest: "/etc/ssl/private/kafka.key"
    owner: root
    group: root
    mode: 0400
  when: security_mode == "ssl"
  
- name: convert certificate to keystore
  command: openssl pkcs12 -export -inkey /etc/ssl/private/kafka.key -in /etc/ssl/certs/kafka.pem -out /tmp/kafka-keystore.pkcs12 -password pass:{{ keystore_password }}
  args:
    creates: /tmp/kafka-keystore.pkcs12
  when: security_mode == "ssl"

- name: Make sure keystore is absent
  file:
    state: absent
    path: /var/ssl/private/client.keystore.jks

- name: Create java keystore from cert
  command: keytool -importkeystore -noprompt -srckeystore /tmp/kafka-keystore.pkcs12 -srcstoretype pkcs12 -destkeystore /var/ssl/private/client.keystore.jks -storepass {{ keystore_password }} -srcstorepass {{ keystore_password }}
  args:
    creates: /var/ssl/private/client.keystore.jks
  when: security_mode == "ssl"
  notify:
    - restart kafka

# The below didn't work, so using system default truststore with certs from bbc-eng-bsd-ssl
#- name: Create java truststore from cert
#  command: keytool -import -noprompt -file /etc/ssl/certs/kafka.pem -alias kafkacert -keystore /var/ssl/private/client.truststore.jks -storepass {{ keystore_password }}
#  args:
#    creates: /var/ssl/private/client.truststore.jks
#  when: security_mode == "ssl"
### End BBC additions

- name: broker group
  group:
    name: "{{kafka.broker.group}}"
- name: broker user
  user:
    name: "{{kafka.broker.user}}"
    comment: "Kafka User"
    system: yes
    group: "{{kafka.broker.group}}"
- name: create broker data directories
  file:
    path: "{{item}}"
    owner: "{{kafka.broker.user}}"
    group: "{{kafka.broker.group}}"
    state: directory
    mode: 0755
  with_items: "{{kafka.broker.datadir}}"
- name: broker plaintext config
  template:
    src: server.properties.j2
    dest: "{{kafka.broker.config_file}}"
    mode: 0640
    owner: "{{kafka.broker.user}}"
    group: "{{kafka.broker.group}}"
  when: security_mode == "plaintext"
  notify:
    - restart kafka
- name: broker ssl config
  template:
    src: server_ssl.properties.j2
    dest: "{{kafka.broker.config_file}}"
    mode: 0640
    owner: "{{kafka.broker.user}}"
    group: "{{kafka.broker.group}}"
  when: security_mode == "ssl"
  notify:
    - restart kafka
- name: broker sasl_ssl config
  template:
    src: server_sasl_ssl.properties.j2
    dest: "{{kafka.broker.config_file}}"
    mode: 0640
    owner: "{{kafka.broker.user}}"
    group: "{{kafka.broker.group}}"
  when: security_mode == "sasl_ssl"
  notify:
    - restart kafka
- name: create systemd override file
  file:
    path: "{{kafka.broker.systemd_override}}"
    owner: "{{kafka.broker.user}}"
    group: "{{kafka.broker.group}}"
    state: directory
    mode: 0640
- name: write environment variables
  template:
    src: environment.j2
    dest: "{{kafka.broker.systemd_override}}/override.conf"
    mode: 0640
    owner: "{{kafka.broker.user}}"
    group: "{{kafka.broker.group}}"
  notify:
    - reload systemd
    - restart kafka
- name: broker configure service
  systemd:
    name: "{{kafka.broker.service_name}}"
    enabled: "{{kafka.broker.systemd.enabled}}"
    state: "{{kafka.broker.systemd.state}}"
